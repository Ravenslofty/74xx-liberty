/* Generated by Yosys 0.23 (git sha1 7ce5011c24b, gcc 11.3.0 -fPIC -Os) */

(* hdlname = "\\alu" *)
(* top =  1  *)
(* src = "test/alu.v:1.1-21.10" *)
module alu(a, b, clk, fi, su, s, cf, zf);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  (* src = "test/alu.v:18.12-18.18" *)
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _14_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _15_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _16_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _17_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _18_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _19_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _20_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _21_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  wire _22_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:129.15-129.25" *)
  wire _23_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:129.15-129.25" *)
  wire _24_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:129.15-129.25" *)
  wire _25_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:129.15-129.25" *)
  wire _26_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:129.15-129.25" *)
  wire _27_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:129.15-129.25" *)
  wire _28_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:129.15-129.25" *)
  wire _29_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:129.15-129.25" *)
  wire _30_;
  (* unused_bits = "1 2 3 5 6 7" *)
  wire [8:0] _31_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:120.18-120.19" *)
  (* unused_bits = "1 2 3 5 6 7 9 10 11 12" *)
  wire [12:0] _32_;
  (* src = "test/alu.v:13.26-13.31|74_adder.v:119.20-119.22" *)
  (* unused_bits = "9 10 11" *)
  wire [11:0] _33_;
  (* src = "test/alu.v:11.8-11.11" *)
  wire _cf;
  (* src = "test/alu.v:2.17-2.18" *)
  input [7:0] a;
  wire [7:0] a;
  (* src = "test/alu.v:3.17-3.18" *)
  input [7:0] b;
  wire [7:0] b;
  (* src = "test/alu.v:8.16-8.18" *)
  output cf;
  wire cf;
  (* src = "test/alu.v:4.11-4.14" *)
  input clk;
  wire clk;
  (* src = "test/alu.v:5.11-5.13" *)
  input fi;
  wire fi;
  (* src = "test/alu.v:7.18-7.19" *)
  output [7:0] s;
  wire [7:0] s;
  (* src = "test/alu.v:6.11-6.13" *)
  input su;
  wire su;
  (* src = "test/alu.v:9.16-9.18" *)
  output zf;
  wire zf;
  \74AC04_6x1NOT  _34_ (
    .A(b[4]),
    .Y(_27_)
  );
  \74AC04_6x1NOT  _35_ (
    .A(b[5]),
    .Y(_28_)
  );
  \74AC04_6x1NOT  _36_ (
    .A(b[6]),
    .Y(_29_)
  );
  \74AC04_6x1NOT  _37_ (
    .A(b[7]),
    .Y(_30_)
  );
  \74AC04_6x1NOT  _38_ (
    .A(b[0]),
    .Y(_23_)
  );
  \74AC04_6x1NOT  _39_ (
    .A(b[1]),
    .Y(_24_)
  );
  \74AC04_6x1NOT  _40_ (
    .A(b[2]),
    .Y(_25_)
  );
  \74AC04_6x1NOT  _41_ (
    .A(b[3]),
    .Y(_26_)
  );
  \74AC257_4x1MUX2  _42_ (
    .A(_01_),
    .B(_14_),
    .S(su),
    .Y(s[0])
  );
  \74AC257_4x1MUX2  _43_ (
    .A(_02_),
    .B(_15_),
    .S(su),
    .Y(s[1])
  );
  \74AC257_4x1MUX2  _44_ (
    .A(_03_),
    .B(_16_),
    .S(su),
    .Y(s[2])
  );
  \74AC257_4x1MUX2  _45_ (
    .A(_04_),
    .B(_17_),
    .S(su),
    .Y(s[3])
  );
  \74AC257_4x1MUX2  _46_ (
    .A(_05_),
    .B(_18_),
    .S(su),
    .Y(s[4])
  );
  \74AC257_4x1MUX2  _47_ (
    .A(_06_),
    .B(_19_),
    .S(su),
    .Y(s[5])
  );
  \74AC257_4x1MUX2  _48_ (
    .A(_07_),
    .B(_20_),
    .S(su),
    .Y(s[6])
  );
  \74AC257_4x1MUX2  _49_ (
    .A(_08_),
    .B(_21_),
    .S(su),
    .Y(s[7])
  );
  \74AC32_4x1OR2  _50_ (
    .A(s[6]),
    .B(s[7]),
    .Y(_10_)
  );
  \74AC27_3x1NOR3  _51_ (
    .A(s[4]),
    .B(s[5]),
    .C(_10_),
    .Y(_11_)
  );
  \74AC32_4x1OR2  _52_ (
    .A(s[0]),
    .B(s[3]),
    .Y(_12_)
  );
  \74AC27_3x1NOR3  _53_ (
    .A(s[1]),
    .B(s[2]),
    .C(_12_),
    .Y(_13_)
  );
  \74AC08_4x1AND2  _54_ (
    .A(_11_),
    .B(_13_),
    .Y(_09_)
  );
  \74AC257_4x1MUX2  _55_ (
    .A(_00_),
    .B(_22_),
    .S(su),
    .Y(_cf)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "test/alu.v:13.34-13.39|74_adder.v:52.26-58.10" *)
  \74AC283_1x1ADD4  _56_ (
    .A(a[3:0]),
    .B(b[3:0]),
    .CI(1'h0),
    .CO(_31_[4]),
    .S({ _04_, _03_, _02_, _01_ })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "test/alu.v:13.34-13.39|74_adder.v:52.26-58.10" *)
  \74AC283_1x1ADD4  _57_ (
    .A(a[7:4]),
    .B(b[7:4]),
    .CI(_31_[4]),
    .CO(_00_),
    .S({ _08_, _07_, _06_, _05_ })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "test/alu.v:15.3-20.6|74_dffe.v:20.20-25.4" *)
  \74AC377_8x1DFFE  _58_ (
    .CE(fi),
    .CP(clk),
    .D(_cf),
    .Q(cf)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "test/alu.v:15.3-20.6|74_dffe.v:20.20-25.4" *)
  \74AC377_8x1DFFE  _59_ (
    .CE(fi),
    .CP(clk),
    .D(_09_),
    .Q(zf)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "test/alu.v:13.26-13.31|74_adder.v:127.24-133.8" *)
  \74AC283_1x1ADD4  _60_ (
    .A(a[3:0]),
    .B({ _26_, _25_, _24_, _23_ }),
    .CI(1'h1),
    .CO(_32_[4]),
    .S({ _17_, _16_, _15_, _14_ })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "test/alu.v:13.26-13.31|74_adder.v:127.24-133.8" *)
  \74AC283_1x1ADD4  _61_ (
    .A(a[7:4]),
    .B({ _30_, _29_, _28_, _27_ }),
    .CI(_32_[4]),
    .CO(_32_[8]),
    .S({ _21_, _20_, _19_, _18_ })
  );
  (* module_not_derived = 32'd1 *)
  (* src = "test/alu.v:13.26-13.31|74_adder.v:127.24-133.8" *)
  \74AC283_1x1ADD4  _62_ (
    .A(4'h0),
    .B(4'hf),
    .CI(_32_[8]),
    .CO(_32_[12]),
    .S({ _33_[11:9], _22_ })
  );
  assign { _31_[8], _31_[0] } = { _00_, 1'h0 };
  assign _32_[0] = 1'h1;
  assign _33_[8:0] = { _22_, _21_, _20_, _19_, _18_, _17_, _16_, _15_, _14_ };
endmodule
